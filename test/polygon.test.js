'use strict';

const test = require('tap').test;
const stackerOfWorlds = require('..');

test('multiworld Polygon', function(assert) {
  assert.deepEqual(stackerOfWorlds({
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'Polygon',
      coordinates: [[
        [-999.84374999999999, 53.330872983017066],
        [56.25, -53.330872983017045],
        [831.09375, -1.4061088354351468],
        [-999.84374999999999, 53.330872983017066],
      ]],
    },
  }), {
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'MultiPolygon',
      coordinates: [
        [
          [
            [180, 43.24700618729348],
            [80.15625, 53.330872983017066],
            [180,50.34598380551314],
            [180,43.24700618729348],
          ],
        ],
        [
          [
            [180,6.88827520552951],
            [-180,43.24700618729348],
            [-180,50.34598380551314],
            [180,39.58356648944266],
            [180,6.88827520552951],
          ],
        ],
        [
          [
            [180,-29.47045577623445],
            [-180,6.88827520552951],
            [-180,39.58356648944266],
            [180,28.82114917337218],
            [180,-29.47045577623445],
          ],
        ],
        [
          [
            [180,-45.03798869084426],
            [56.25,-53.330872983017045],
            [-180,-29.47045577623445],
            [-180,28.82114917337218],
            [180,18.0587318573017],
            [180,-45.03798869084426],
          ],
        ],
        [
          [
            [180,-20.913234386341596],
            [-180,-45.03798869084426],
            [-180,18.0587318573017],
            [180,7.296314541231219],
            [180,-20.913234386341596],
          ],
        ],
        [
          [
            [-180,7.296314541231219],
            [111.09375,-1.4061088354351468],
            [-180,-20.913234386341596],
            [-180,7.296314541231219],
          ],
        ],
      ],
    },
  }, 'returns stacked MultiPolygon');
  assert.end();
});

test('real-world Polygon drawn counterclockwise', function(assert) {
  assert.deepEqual(stackerOfWorlds({
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'Polygon',
      coordinates: [[
        [68.90625, 57.32652122521709],
        [59.0625, 40.979898069620155],
        [80.15625, 40.979898069620155],
        [68.90625, 57.32652122521709],
      ]],
    },
  }), {
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'Polygon',
      coordinates: [[
        [68.90625, 57.32652122521709],
        [80.15625, 40.979898069620155],
        [59.0625, 40.979898069620155],
        [68.90625, 57.32652122521709],
      ]],
    },
  }, 'returns unchanged except redirected clockwise');
  assert.end();
});

test('otherworldly Polygon', function(assert) {
  assert.deepEqual(stackerOfWorlds({
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'Polygon',
      coordinates: [[
        [819.84375, 48.922499263758255],
        [832.5, 33.137551192346145],
        [812.8125, 33.137551192346145],
        [819.84375, 48.922499263758255],
      ]],
    },
  }), {
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'Polygon',
      coordinates: [[
        [99.84375, 48.922499263758255],
        [112.5, 33.137551192346145],
        [92.8125, 33.137551192346145],
        [99.84375, 48.922499263758255],
      ]],
    },
  }, 'returns unchanged except redirected clockwise');
  assert.end();
});

test('MultiPolygon', function(assert) {
  assert.deepEqual(stackerOfWorlds({
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'MultiPolygon',
      coordinates: [
        [
          [
            [-113.90625, 54.97761367069628],
            [-127.96875, 28.92163128242129],
            [-92.10937499999999, 28.92163128242129],
            [-113.90625, 54.97761367069628],
          ],
        ],
        [
          [
            [291.09375, -22.593726063929296],
            [296.015625, -53.330872983017045],
            [320.625, -9.10209673872643],
            [291.09375, -22.593726063929296],
          ],
        ],
        [
          [
            [-340.3125, -27.68352808378776],
            [2.8125, 5.61598581915534],
            [251.015625, 46.07323062540838],
            [-340.3125, -27.68352808378776],
          ],
        ],
      ],
    },
  }), {
    type: 'Feature',
    properties: {},
    geometry: {
      type: 'MultiPolygon',
      coordinates: [
        [
          [
            [180, -12.125558473396314],
            [19.6875, -27.68352808378776],
            [180, -7.687641061556226],
            [180, -12.125558473396314],
          ],
        ],
        [
          [
            [-113.90625, 54.97761367069628],
            [-92.10937499999999, 28.92163128242129],
            [-127.96875, 28.92163128242129],
            [-113.90625, 54.97761367069628],
          ],
        ],
        [
          [
            [180, 34.497645000956375],
            [2.8125, 5.61598581915534],
            [-180, -12.125558473396314],
            [-180, -7.687641061556226],
            [180, 37.21540347959529],
            [180, 34.497645000956375],
          ],
        ],
        [
          [
            [-68.90625, -22.593726063929296],
            [-39.375, -9.10209673872643],
            [-63.984375, -53.330872983017045],
            [-68.90625, -22.593726063929296],
          ],
        ],
        [
          [
            [-180, 37.21540347959529],
            [-108.984375, 46.07323062540838],
            [-180, 34.497645000956375],
            [-180, 37.21540347959529],
          ],
        ],
      ],
    },
  });
  assert.end();
});
